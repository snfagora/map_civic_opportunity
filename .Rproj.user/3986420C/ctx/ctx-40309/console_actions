{
    "type": [
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2
    ],
    "data": [
        "    \r|===========================================================                        | 72% ~18 s remaining    \r|===========================================================                        | 72% ~17 s remaining    \r|===========================================================                        | 72% ~17 s remaining    \r|===========================================================                        | 72% ~17 s remaining    \r|===========================================================                        | 72% ~17 s remaining",
        "    \r|===========================================================                        | 72% ~17 s remaining    \r|===========================================================                        | 72% ~17 s remaining    \r|===========================================================                        | 72% ~17 s remaining    \r|============================================================                       | 72% ~17 s remaining    \r|============================================================                       | 72% ~17 s remaining",
        "    \r|============================================================                       | 73% ~17 s remaining    \r|============================================================                       | 73% ~17 s remaining    \r|============================================================                       | 73% ~17 s remaining    \r|============================================================                       | 73% ~17 s remaining    \r|============================================================                       | 73% ~17 s remaining",
        "    \r|============================================================                       | 73% ~17 s remaining    \r|============================================================                       | 73% ~17 s remaining    \r|============================================================                       | 73% ~17 s remaining    \r|============================================================                       | 73% ~17 s remaining    \r|============================================================                       | 73% ~16 s remaining",
        "    \r|============================================================                       | 73% ~16 s remaining    \r|=============================================================                      | 74% ~16 s remaining    \r|=============================================================                      | 74% ~16 s remaining    \r|=============================================================                      | 74% ~16 s remaining    \r|=============================================================                      | 74% ~16 s remaining",
        "    \r|=============================================================                      | 74% ~16 s remaining    \r|=============================================================                      | 74% ~16 s remaining    \r|=============================================================                      | 74% ~16 s remaining    \r|=============================================================                      | 74% ~16 s remaining    \r|=============================================================                      | 74% ~16 s remaining",
        "    \r|=============================================================                      | 74% ~16 s remaining    \r|=============================================================                      | 74% ~16 s remaining    \r|=============================================================                      | 75% ~16 s remaining    \r|=============================================================                      | 75% ~16 s remaining    \r|==============================================================                     | 75% ~16 s remaining",
        "    \r|==============================================================                     | 75% ~16 s remaining    \r|==============================================================                     | 75% ~15 s remaining    \r|==============================================================                     | 75% ~15 s remaining    \r|==============================================================                     | 75% ~15 s remaining    \r|==============================================================                     | 75% ~15 s remaining",
        "    \r|==============================================================                     | 75% ~15 s remaining    \r|==============================================================                     | 75% ~15 s remaining    \r|==============================================================                     | 76% ~15 s remaining    \r|==============================================================                     | 76% ~15 s remaining    \r|==============================================================                     | 76% ~15 s remaining",
        "    \r|==============================================================                     | 76% ~15 s remaining    \r|===============================================================                    | 76% ~15 s remaining    \r|===============================================================                    | 76% ~15 s remaining    \r|===============================================================                    | 76% ~15 s remaining    \r|===============================================================                    | 76% ~15 s remaining",
        "    \r|===============================================================                    | 76% ~15 s remaining    \r|===============================================================                    | 76% ~15 s remaining    \r|===============================================================                    | 76% ~15 s remaining    \r|===============================================================                    | 77% ~15 s remaining    \r|===============================================================                    | 77% ~14 s remaining",
        "    \r|===============================================================                    | 77% ~14 s remaining    \r|===============================================================                    | 77% ~14 s remaining    \r|===============================================================                    | 77% ~14 s remaining    \r|===============================================================                    | 77% ~14 s remaining    \r|===============================================================                    | 77% ~14 s remaining",
        "    \r|================================================================                   | 77% ~14 s remaining    \r|================================================================                   | 77% ~14 s remaining    \r|================================================================                   | 77% ~14 s remaining    \r|================================================================                   | 77% ~14 s remaining    \r|================================================================                   | 78% ~14 s remaining",
        "    \r|================================================================                   | 78% ~14 s remaining    \r|================================================================                   | 78% ~14 s remaining    \r|================================================================                   | 78% ~14 s remaining    \r|================================================================                   | 78% ~14 s remaining    \r|================================================================                   | 78% ~14 s remaining",
        "    \r|================================================================                   | 78% ~14 s remaining    \r|================================================================                   | 78% ~13 s remaining    \r|================================================================                   | 78% ~13 s remaining    \r|=================================================================                  | 78% ~13 s remaining    \r|=================================================================                  | 78% ~13 s remaining",
        "    \r|=================================================================                  | 79% ~13 s remaining    \r|=================================================================                  | 79% ~13 s remaining    \r|=================================================================                  | 79% ~13 s remaining    \r|=================================================================                  | 79% ~13 s remaining    \r|=================================================================                  | 79% ~13 s remaining",
        "    \r|=================================================================                  | 79% ~13 s remaining    \r|=================================================================                  | 79% ~13 s remaining    \r|=================================================================                  | 79% ~13 s remaining    \r|=================================================================                  | 79% ~13 s remaining    \r|=================================================================                  | 79% ~13 s remaining",
        "    \r|==================================================================                 | 80% ~13 s remaining    \r|==================================================================                 | 80% ~13 s remaining    \r|==================================================================                 | 80% ~13 s remaining    \r|==================================================================                 | 80% ~12 s remaining    \r|==================================================================                 | 80% ~12 s remaining",
        "    \r|==================================================================                 | 80% ~12 s remaining    \r|==================================================================                 | 80% ~12 s remaining    \r|==================================================================                 | 80% ~12 s remaining    \r|==================================================================                 | 80% ~12 s remaining    \r|==================================================================                 | 80% ~12 s remaining",
        "    \r|==================================================================                 | 80% ~12 s remaining    \r|==================================================================                 | 81% ~12 s remaining    \r|==================================================================                 | 81% ~12 s remaining    \r|===================================================================                | 81% ~12 s remaining    \r|===================================================================                | 81% ~12 s remaining",
        "    \r|===================================================================                | 81% ~12 s remaining    \r|===================================================================                | 81% ~12 s remaining    \r|===================================================================                | 81% ~12 s remaining    \r|===================================================================                | 81% ~12 s remaining    \r|===================================================================                | 81% ~12 s remaining",
        "    \r|===================================================================                | 81% ~12 s remaining    \r|===================================================================                | 82% ~11 s remaining    \r|===================================================================                | 82% ~11 s remaining    \r|===================================================================                | 82% ~11 s remaining    \r|===================================================================                | 82% ~11 s remaining",
        "    \r|===================================================================                | 82% ~11 s remaining    \r|====================================================================               | 82% ~11 s remaining    \r|====================================================================               | 82% ~11 s remaining    \r|====================================================================               | 82% ~11 s remaining    \r|====================================================================               | 82% ~11 s remaining",
        "    \r|====================================================================               | 82% ~11 s remaining    \r|====================================================================               | 82% ~11 s remaining    \r|====================================================================               | 83% ~11 s remaining    \r|====================================================================               | 83% ~11 s remaining    \r|====================================================================               | 83% ~11 s remaining",
        "    \r|====================================================================               | 83% ~11 s remaining    \r|====================================================================               | 83% ~11 s remaining    \r|====================================================================               | 83% ~11 s remaining    \r|====================================================================               | 83% ~10 s remaining    \r|=====================================================================              | 83% ~10 s remaining",
        "    \r|=====================================================================              | 83% ~10 s remaining    \r|=====================================================================              | 83% ~10 s remaining    \r|=====================================================================              | 84% ~10 s remaining    \r|=====================================================================              | 84% ~10 s remaining    \r|=====================================================================              | 84% ~10 s remaining",
        "    \r|=====================================================================              | 84% ~10 s remaining    \r|=====================================================================              | 84% ~10 s remaining    \r|=====================================================================              | 84% ~10 s remaining    \r|=====================================================================              | 84% ~10 s remaining    \r|=====================================================================              | 84% ~10 s remaining",
        "    \r|=====================================================================              | 84% ~10 s remaining    \r|======================================================================             | 84% ~10 s remaining    \r|======================================================================             | 85% ~10 s remaining    \r|======================================================================             | 85% ~10 s remaining    \r|======================================================================             | 85% ~9 s remaining",
        "     \r|======================================================================             | 85% ~9 s remaining     \r|======================================================================             | 85% ~9 s remaining     \r|======================================================================             | 85% ~9 s remaining     \r|======================================================================             | 85% ~9 s remaining     \r|======================================================================             | 85% ~9 s remaining",
        "     \r|======================================================================             | 85% ~9 s remaining     \r|======================================================================             | 85% ~9 s remaining     \r|======================================================================             | 85% ~9 s remaining     \r|=======================================================================            | 86% ~9 s remaining     \r|=======================================================================            | 86% ~9 s remaining",
        "     \r|=======================================================================            | 86% ~9 s remaining     \r|=======================================================================            | 86% ~9 s remaining     \r|=======================================================================            | 86% ~9 s remaining     \r|=======================================================================            | 86% ~9 s remaining     \r|=======================================================================            | 86% ~9 s remaining",
        "     \r|=======================================================================            | 86% ~9 s remaining     \r|=======================================================================            | 86% ~8 s remaining     \r|=======================================================================            | 86% ~8 s remaining     \r|=======================================================================            | 87% ~8 s remaining     \r|=======================================================================            | 87% ~8 s remaining",
        "     \r|=======================================================================            | 87% ~8 s remaining     \r|========================================================================           | 87% ~8 s remaining     \r|========================================================================           | 87% ~8 s remaining     \r|========================================================================           | 87% ~8 s remaining     \r|========================================================================           | 87% ~8 s remaining",
        "     \r|========================================================================           | 87% ~8 s remaining     \r|========================================================================           | 87% ~8 s remaining     \r|========================================================================           | 87% ~8 s remaining     \r|========================================================================           | 87% ~8 s remaining     \r|========================================================================           | 88% ~8 s remaining",
        "     \r|========================================================================           | 88% ~8 s remaining     \r|========================================================================           | 88% ~8 s remaining     \r|========================================================================           | 88% ~8 s remaining     \r|========================================================================           | 88% ~8 s remaining     \r|=========================================================================          | 88% ~7 s remaining",
        "     \r|=========================================================================          | 88% ~7 s remaining     \r|=========================================================================          | 88% ~7 s remaining     \r|=========================================================================          | 88% ~7 s remaining     \r|=========================================================================          | 88% ~7 s remaining     \r|=========================================================================          | 88% ~7 s remaining",
        "     \r|=========================================================================          | 89% ~7 s remaining     \r|=========================================================================          | 89% ~7 s remaining     \r|=========================================================================          | 89% ~7 s remaining     \r|=========================================================================          | 89% ~7 s remaining     \r|=========================================================================          | 89% ~7 s remaining",
        "     \r|=========================================================================          | 89% ~7 s remaining     \r|=========================================================================          | 89% ~7 s remaining     \r|==========================================================================         | 89% ~7 s remaining     \r|==========================================================================         | 89% ~7 s remaining     \r|==========================================================================         | 89% ~7 s remaining",
        "     \r|==========================================================================         | 89% ~7 s remaining     \r|==========================================================================         | 90% ~6 s remaining     \r|==========================================================================         | 90% ~6 s remaining     \r|==========================================================================         | 90% ~6 s remaining     \r|==========================================================================         | 90% ~6 s remaining",
        "     \r|==========================================================================         | 90% ~6 s remaining     \r|==========================================================================         | 90% ~6 s remaining     \r|==========================================================================         | 90% ~6 s remaining     \r|==========================================================================         | 90% ~6 s remaining     \r|==========================================================================         | 90% ~6 s remaining",
        "     \r|===========================================================================        | 90% ~6 s remaining     \r|===========================================================================        | 90% ~6 s remaining     \r|===========================================================================        | 91% ~6 s remaining     \r|===========================================================================        | 91% ~6 s remaining     \r|===========================================================================        | 91% ~6 s remaining",
        "     \r|===========================================================================        | 91% ~6 s remaining     \r|===========================================================================        | 91% ~6 s remaining     \r|===========================================================================        | 91% ~6 s remaining     \r|===========================================================================        | 91% ~6 s remaining     \r|===========================================================================        | 91% ~6 s remaining",
        "     \r|===========================================================================        | 91% ~5 s remaining     \r|===========================================================================        | 91% ~5 s remaining     \r|===========================================================================        | 91% ~5 s remaining     \r|===========================================================================        | 91% ~5 s remaining     \r|===========================================================================        | 92% ~5 s remaining",
        "     \r|============================================================================       | 92% ~5 s remaining     \r|============================================================================       | 92% ~5 s remaining     \r|============================================================================       | 92% ~5 s remaining     \r|============================================================================       | 92% ~5 s remaining     \r|============================================================================       | 92% ~5 s remaining",
        "     \r|============================================================================       | 92% ~5 s remaining     \r|============================================================================       | 92% ~5 s remaining     \r|============================================================================       | 92% ~5 s remaining     \r|============================================================================       | 92% ~5 s remaining     \r|============================================================================       | 92% ~5 s remaining",
        "     \r|============================================================================       | 93% ~5 s remaining     \r|============================================================================       | 93% ~5 s remaining     \r|=============================================================================      | 93% ~5 s remaining     \r|=============================================================================      | 93% ~4 s remaining     \r|=============================================================================      | 93% ~4 s remaining",
        "     \r|=============================================================================      | 93% ~4 s remaining     \r|=============================================================================      | 93% ~4 s remaining     \r|=============================================================================      | 93% ~4 s remaining     \r|=============================================================================      | 93% ~4 s remaining     \r|=============================================================================      | 93% ~4 s remaining",
        "     \r|=============================================================================      | 93% ~4 s remaining     \r|=============================================================================      | 94% ~4 s remaining     \r|=============================================================================      | 94% ~4 s remaining     \r|=============================================================================      | 94% ~4 s remaining     \r|=============================================================================      | 94% ~4 s remaining",
        "     \r|=============================================================================      | 94% ~4 s remaining     \r|==============================================================================     | 94% ~4 s remaining     \r|==============================================================================     | 94% ~4 s remaining     \r|==============================================================================     | 94% ~4 s remaining     \r|==============================================================================     | 94% ~4 s remaining",
        "     \r|==============================================================================     | 94% ~3 s remaining     \r|==============================================================================     | 95% ~3 s remaining     \r|==============================================================================     | 95% ~3 s remaining     \r|==============================================================================     | 95% ~3 s remaining     \r|==============================================================================     | 95% ~3 s remaining",
        "     \r|==============================================================================     | 95% ~3 s remaining     \r|==============================================================================     | 95% ~3 s remaining     \r|==============================================================================     | 95% ~3 s remaining     \r|===============================================================================    | 95% ~3 s remaining     \r|===============================================================================    | 95% ~3 s remaining",
        "     \r|===============================================================================    | 95% ~3 s remaining     \r|===============================================================================    | 95% ~3 s remaining     \r|===============================================================================    | 96% ~3 s remaining     \r|===============================================================================    | 96% ~3 s remaining     \r|===============================================================================    | 96% ~3 s remaining",
        "     \r|===============================================================================    | 96% ~3 s remaining     \r|===============================================================================    | 96% ~3 s remaining     \r|===============================================================================    | 96% ~2 s remaining     \r|===============================================================================    | 96% ~2 s remaining     \r|===============================================================================    | 96% ~2 s remaining",
        "     \r|===============================================================================    | 96% ~2 s remaining     \r|===============================================================================    | 96% ~2 s remaining     \r|================================================================================   | 96% ~2 s remaining     \r|================================================================================   | 97% ~2 s remaining     \r|================================================================================   | 97% ~2 s remaining",
        "     \r|================================================================================   | 97% ~2 s remaining     \r|================================================================================   | 97% ~2 s remaining     \r|================================================================================   | 97% ~2 s remaining     \r|================================================================================   | 97% ~2 s remaining     \r|================================================================================   | 97% ~2 s remaining",
        "     \r|================================================================================   | 97% ~2 s remaining     \r|================================================================================   | 97% ~2 s remaining     \r|================================================================================   | 97% ~2 s remaining     \r|================================================================================   | 97% ~2 s remaining     \r|================================================================================   | 98% ~2 s remaining",
        "     \r|=================================================================================  | 98% ~1 s remaining     \r|=================================================================================  | 98% ~1 s remaining     \r|=================================================================================  | 98% ~1 s remaining     \r|=================================================================================  | 98% ~1 s remaining     \r|=================================================================================  | 98% ~1 s remaining",
        "     \r|=================================================================================  | 98% ~1 s remaining     \r|=================================================================================  | 98% ~1 s remaining     \r|=================================================================================  | 98% ~1 s remaining     \r|=================================================================================  | 98% ~1 s remaining     \r|=================================================================================  | 98% ~1 s remaining",
        "     \r|=================================================================================  | 99% ~1 s remaining     \r|=================================================================================  | 99% ~1 s remaining     \r|=================================================================================  | 99% ~1 s remaining     \r|=================================================================================  | 99% ~1 s remaining     \r|================================================================================== | 99% ~1 s remaining",
        "     \r|================================================================================== | 99% ~1 s remaining     \r|================================================================================== | 99% ~1 s remaining     \r|================================================================================== | 99% ~1 s remaining     \r|================================================================================== | 99% ~0 s remaining     \r|================================================================================== | 99% ~0 s remaining",
        "     \r|================================================================================== | 99% ~0 s remaining     \r|================================================================================== |100% ~0 s remaining     \r|================================================================================== |100% ~0 s remaining     \r|================================================================================== |100% ~0 s remaining     \r|================================================================================== |100% ~0 s remaining",
        "     \r|================================================================================== |100% ~0 s remaining     \r|===================================================================================|100% ~0 s remaining     ",
        "> ",
        "lm_btw_county <- county_cov %>%",
        "+ ",
        "  group_by(urban_suburban_rural) %>%",
        "+ ",
        "  do(tidy(standardize(lm_robust(formula = all_org ~ race_per_white_nonhispanic + per_poverty + college_educ, data = .))))",
        "> ",
        "lm_btw_cty_all_org <- county_cov %>%",
        "+ ",
        "  group_by(urban_suburban_rural) %>%",
        "+ ",
        "  do(tidy(standardize(lm_robust(formula = all_org ~ race_per_white_nonhispanic + per_poverty + college_educ, data = .))))",
        "> ",
        "lm_btw_cty_civc_index <- county_cov %>%",
        "+ ",
        "  group_by(urban_suburban_rural) %>%",
        "+ ",
        "  do(tidy(standardize(lm_robust(formula = opc_tier ~ race_per_white_nonhispanic + per_poverty + college_educ, data = .))))",
        "> ",
        "btw_mod_bind <- bind_rows(",
        "+ ",
        "  mutate(lm_btw_cty_civc_index, DV = \"Civic opportunity index\"),",
        "+ ",
        "  mutate(lm_btw_cty_all_org, DV = \"Org density index\")",
        "+ ",
        ")",
        "> ",
        "between_counties_plot <- tbw_mod_bind %>%",
        "+ ",
        "  mutate(term = recode(term,",
        "+ ",
        "    \"white\" = \"Non-hispanic white\",",
        "+ ",
        "    \"poverty\" = \"Federal poverty level\",",
        "+ ",
        "    \"educ\" = \"College educated\"",
        "+ ",
        "  )) %>%",
        "+ ",
        "  filter(!str_detect(term, \"(Intercept)\")) %>%",
        "+ ",
        "  ggplot(aes(x = urban_suburban_rural)) +",
        "+ ",
        "  geom_col(aes(y = estimate, fill = DV), position = \"dodge\", alpha = 0.8) +",
        "+ ",
        "  geom_errorbar(aes(ymax = conf.high, ymin = conf.low, fill = DV), position = \"dodge\") +",
        "+ ",
        "  geom_hline(yintercept = 0, linetype = \"dashed\", col = \"red\") +",
        "+ ",
        "  labs(",
        "+ ",
        "    x = \"\",",
        "+ ",
        "    y = \"Estimated coefficient\",",
        "+ ",
        "    title = \"Between counties\",",
        "+ ",
        "    subtitle = \"Aggregated zip code-level observations by county\",",
        "+ ",
        "    fill = \"Type\"",
        "+ ",
        "  ) +",
        "+ ",
        "  scale_fill_viridis_d(option = \"rocket\", begin = 0.2, end = 0.8) +",
        "+ ",
        "  facet_wrap(~term, ncol = 2)",
        "Error in mutate(., term = recode(term, white = \"Non-hispanic white\", poverty = \"Federal poverty level\",  : \n  object 'tbw_mod_bind' not found\n",
        "> ",
        "between_counties_plot <- btw_mod_bind %>%",
        "+ ",
        "  mutate(term = recode(term,",
        "+ ",
        "    \"white\" = \"Non-hispanic white\",",
        "+ ",
        "    \"poverty\" = \"Federal poverty level\",",
        "+ ",
        "    \"educ\" = \"College educated\"",
        "+ ",
        "  )) %>%",
        "+ ",
        "  filter(!str_detect(term, \"(Intercept)\")) %>%",
        "+ ",
        "  ggplot(aes(x = urban_suburban_rural)) +",
        "+ ",
        "  geom_col(aes(y = estimate, fill = DV), position = \"dodge\", alpha = 0.8) +",
        "+ ",
        "  geom_errorbar(aes(ymax = conf.high, ymin = conf.low, fill = DV), position = \"dodge\") +",
        "+ ",
        "  geom_hline(yintercept = 0, linetype = \"dashed\", col = \"red\") +",
        "+ ",
        "  labs(",
        "+ ",
        "    x = \"\",",
        "+ ",
        "    y = \"Estimated coefficient\",",
        "+ ",
        "    title = \"Between counties\",",
        "+ ",
        "    subtitle = \"Aggregated zip code-level observations by county\",",
        "+ ",
        "    fill = \"Type\"",
        "+ ",
        "  ) +",
        "+ ",
        "  scale_fill_viridis_d(option = \"rocket\", begin = 0.2, end = 0.8) +",
        "+ ",
        "  facet_wrap(~term, ncol = 2)",
        "> ",
        "between_counties_plot",
        "> ",
        "names(zcta)",
        "[1] \"ZCTA\"     \"FIPS\"     \"all.orgs\" \"eng\"      \"eng.alt\"  \"vol\"      \"mem\"      \"evt\"      \"act\"     \n",
        "> ",
        "head(zcta)",
        "> ",
        "cta %>%",
        "+ ",
        "  arrange(ZCTA, FIPA)",
        "Error in arrange(., ZCTA, FIPA) : object 'cta' not found\n",
        "> ",
        "zcta %>%",
        "+ ",
        "  arrange(ZCTA, FIPA)",
        "\u001B[1m\u001B[33mError\u001B[39m in `arrange()`:\u001B[22m\n\u001B[38;5;254m\u001B[36mℹ\u001B[38;5;254m In argument: `..2 = FIPA`.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[33m!\u001B[39m object 'FIPA' not found\nBacktrace:\n\u001B[90m  1. \u001B[39mzcta %>% arrange(ZCTA, FIPA)\n\u001B[90m  3. \u001B[39m\u001B[1m\u001B[94mdplyr:::arrange.data.frame(\u001B[39m\u001B[22m., ZCTA, FIPA\u001B[1m\u001B[94m)\u001B[39m\u001B[22m\n\u001B[90m  4. \u001B[39mdplyr:::arrange_rows(.data, dots = dots, locale = .locale)\n\u001B[90m  6. \u001B[39mdplyr:::mutate.data.frame(data, `:=`(\"{name}\", !!dot), .keep = \"none\")\n\u001B[90m  7. \u001B[39mdplyr:::mutate_cols(.data, dplyr_quosures(...), by)\n\u001B[90m  9. \u001B[39mdplyr:::mutate_col(dots[[i]], data, mask, new_columns)\n\u001B[90m 10. \u001B[39mmask$eval_all_mutate(quo)\n\u001B[90m 11. \u001B[39m\u001B[1mdplyr\u001B[22m (local) eval()\n",
        "> ",
        "zcta %>%",
        "+ ",
        "  arrange(ZCTA, FIPS)",
        "> ",
        "names(zcta)",
        "[1] \"ZCTA\"     \"FIPS\"     \"all.orgs\" \"eng\"      \"eng.alt\"  \"vol\"      \"mem\"      \"evt\"      \"act\"     \n",
        "> ",
        "county_orgs <- zcta %>%",
        "+ ",
        "  group_by(FIPS) %>%",
        "+ ",
        "  summarize(all.orgs = sum(all.orgs),",
        "+ ",
        "            eng = sum(eng))",
        "> ",
        "county_cov <- census_county %>%",
        "+ ",
        "  left_join(county_orgs) %>%",
        "+ ",
        "  left_join(county_class) %>%",
        "+ ",
        "  mutate(opc = 1000 * eng / population_total) %>%",
        "+ ",
        "  mutate(opc_tier = ntile(opc, 5)) %>%",
        "+ ",
        "  mutate(all_org = 1000 * all.orgs / population_total) %>%",
        "+ ",
        "  mutate(org_tier = ntile(all_org, 5))",
        "> ",
        "library(MASS)",
        "> ",
        "",
        "> ",
        "lm_btw_cty_all_org <- county_cov %>%",
        "+ ",
        "  group_by(urban_suburban_rural) %>%",
        "+ ",
        "  do(tidy(standardize(lm_robust(formula = all_org ~ race_per_white_nonhispanic + per_poverty + college_educ, data = .))))",
        "> ",
        "",
        "> ",
        "lm_btw_cty_civc_index <- county_cov %>%",
        "+ ",
        "  group_by(urban_suburban_rural) %>%",
        "+ ",
        "  do(tidy(standardize(lm_robust(formula = opc_tier ~ race_per_white_nonhispanic + per_poverty + college_educ, data = .))))",
        "> ",
        "",
        "> ",
        "btw_mod_bind <- bind_rows(",
        "+ ",
        "  mutate(lm_btw_cty_civc_index, DV = \"Civic opportunity index\"),",
        "+ ",
        "  mutate(lm_btw_cty_all_org, DV = \"Org density index\")",
        "+ ",
        ")",
        "> ",
        "between_counties_plot <- btw_mod_bind %>%",
        "+ ",
        "  mutate(term = recode(term,",
        "+ ",
        "    \"white\" = \"Non-hispanic white\",",
        "+ ",
        "    \"poverty\" = \"Federal poverty level\",",
        "+ ",
        "    \"educ\" = \"College educated\"",
        "+ ",
        "  )) %>%",
        "+ ",
        "  filter(!str_detect(term, \"(Intercept)\")) %>%",
        "+ ",
        "  ggplot(aes(x = urban_suburban_rural)) +",
        "+ ",
        "  geom_col(aes(y = estimate, fill = DV), position = \"dodge\", alpha = 0.8) +",
        "+ ",
        "  geom_errorbar(aes(ymax = conf.high, ymin = conf.low, fill = DV), position = \"dodge\") +",
        "+ ",
        "  geom_hline(yintercept = 0, linetype = \"dashed\", col = \"red\") +",
        "+ ",
        "  labs(",
        "+ ",
        "    x = \"\",",
        "+ ",
        "    y = \"Estimated coefficient\",",
        "+ ",
        "    title = \"Between counties\",",
        "+ ",
        "    fill = \"Type\"",
        "+ ",
        "  ) +",
        "+ ",
        "  scale_fill_viridis_d(option = \"rocket\", begin = 0.2, end = 0.8) +",
        "+ ",
        "  facet_wrap(~term, ncol = 2)",
        "> ",
        "",
        "> ",
        "between_counties_plot",
        "> ",
        "",
        "> ",
        "ggsave(here(\"outputs\", \"btw_counties.eps\"), width = 8, height = 8)",
        "> ",
        "source(here(\"functions\", \"utils.r\"))",
        "Error in source(here(\"functions\", \"utils.r\")) : \n  /home/jae/map_civic_opportunity/functions/utils.r:1:1: unexpected input\n1: \u001B\n    ^\n",
        "> ",
        "source(\"/home/jae/map_civic_opportunity/functions/utils.r\")",
        "Error in source(\"/home/jae/map_civic_opportunity/functions/utils.r\") : \n  /home/jae/map_civic_opportunity/functions/utils.r:1:1: unexpected input\n1: \u001B\n    ^\n",
        "> ",
        "census_zcta <- census_detail %>%",
        "+ ",
        "  inner_join(census_subject) %>%",
        "+ ",
        "  rename(ZCTA = GEOID) %>%",
        "+ ",
        "  mutate(race_per_white_nonhispanic = race_white_nonhispanic / population_total) %>%",
        "+ ",
        "  mutate(college_educ = (education_attainment_some_col + education_attainment_bs + education_attainment_grad) / education_attainment_total) %>%",
        "+ ",
        "  mutate(per_poverty = 1 - poverty_gt_150 / poverty_total) %>%",
        "+ ",
        "  dplyr::select(ZCTA, population_total, race_per_white_nonhispanic, per_poverty, college_educ)",
        "> ",
        "county_class <- county_class %>%",
        "+ ",
        "  mutate(urban_suburban_rural = case_when(",
        "+ ",
        "    RuralUrbanContinuumCode2013 %in% c(1, 2, 3) ~ \"Urban\",",
        "+ ",
        "    RuralUrbanContinuumCode2013 %in% c(4, 5, 6) ~ \"Suburban\",",
        "+ ",
        "    RuralUrbanContinuumCode2013 %in% c(7, 8, 9) ~ \"Rural\",",
        "+ ",
        "    is.na(RuralUrbanContinuumCode2013) ~ NA",
        "+ ",
        "  )) %>%",
        "+ ",
        "  mutate(urban_suburban_rural = factor(urban_suburban_rural, levels = c(\"Urban\", \"Suburban\", \"Rural\", NA)))",
        "> ",
        "names(fips)",
        "[1] \"FIPS\"            \"TotalPopEst2019\"\n\nRestarting R session...\n\n",
        "> ",
        "if (!require(pacman)) install.packages(\"pacman\")",
        "> ",
        "",
        "> ",
        "pacman::p_load(",
        "+ ",
        "  tidyverse,",
        "+ ",
        "  glue,",
        "+ ",
        "  here,",
        "+ ",
        "  purrr,",
        "+ ",
        "  estimatr,",
        "+ ",
        "  effectsize,",
        "+ ",
        "  patchwork,",
        "+ ",
        "  tidycensus",
        "+ ",
        ")",
        "> ",
        "",
        "> ",
        "options(es.use_symbols = TRUE) # get nice symbols",
        "> ",
        "",
        "> ",
        "source(here(\"functions\", \"utils.r\"))",
        "Error in source(here(\"functions\", \"utils.r\")) : \n  /home/jae/map_civic_opportunity/functions/utils.r:1:1: unexpected input\n1: \u001B\n    ^\n",
        "> ",
        "# The custom_theme function sets a custom theme for a ggplot2 plot with a black and white color scheme, a 1.2 aspect ratio, and removes grid lines. It also specifies the position of the legend and font sizes for various elements.",
        "> ",
        "",
        "> ",
        "custom_theme <- function() {",
        "+ ",
        "  theme_bw(base_size = 13) +",
        "+ ",
        "    theme(",
        "+ ",
        "      aspect.ratio = 1.2,",
        "+ ",
        "      panel.grid.major.x = element_blank(),",
        "+ ",
        "      panel.grid.minor.x = element_blank(),",
        "+ ",
        "      panel.grid.major.y = element_blank(),",
        "+ ",
        "      panel.grid.minor.y = element_blank(),",
        "+ ",
        "      axis.text.x = element_text(margin = margin(t = 6)),",
        "+ ",
        "      plot.title = element_text(size = 12),",
        "+ ",
        "      plot.subtitle = element_text(size = 10),",
        "+ ",
        "      plot.caption = element_text(colour = \"grey50\", hjust = 0),",
        "+ ",
        "      legend.position = \"bottom\"",
        "+ ",
        "    )",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "# The cut_pop function takes a parameter n_top and selects the top n_top counties by total population for each urban/suburban/rural category. It then performs a robust linear regression using the formula opc_tier ~ race_per_white_nonhispanic + per_poverty + college_educ and weights the observations by TotalPopEst2019. The function outputs standardized coefficients for each variable in the regression model, excluding the intercept.",
        "> ",
        "",
        "> ",
        "cut_pop <- function(n_top) {",
        "+ ",
        "  top_fips <- dd %>%",
        "+ ",
        "    ungroup() %>%",
        "+ ",
        "    group_by(urban_suburban_rural) %>%",
        "+ ",
        "    slice_max(order_by = TotalPopEst2019, prop = n_top) %>%",
        "+ ",
        "    pull(FIPS)",
        "+ ",
        "  ",
        "+ ",
        "  dd <- dd %>%",
        "+ ",
        "    mutate(top = ifelse(FIPS %in% top_fips, 1, 0))",
        "+ ",
        "  ",
        "+ ",
        "  out <- dd %>%",
        "+ ",
        "    filter(top == 1) %>%",
        "+ ",
        "    ungroup() %>%",
        "+ ",
        "    group_by(urban_suburban_rural) %>%",
        "+ ",
        "    # top50) %>%",
        "+ ",
        "    do(tidy(standardize(",
        "+ ",
        "      lm_robust(",
        "+ ",
        "        formula = opc_tier ~ race_per_white_nonhispanic + per_poverty + college_educ,",
        "+ ",
        "        data = .,",
        "+ ",
        "        weights = TotalPopEst2019",
        "+ ",
        "      )",
        "+ ",
        "    ))) %>%",
        "+ ",
        "    filter(!str_detect(term, \"(Intercept)\")) %>%",
        "+ ",
        "    mutate(top_n = n_top)",
        "+ ",
        "  ",
        "+ ",
        "  return(out)",
        "+ ",
        "}",
        "> ",
        "if (!require(pacman)) install.packages(\"pacman\")",
        "> ",
        "",
        "> ",
        "pacman::p_load(",
        "+ ",
        "  tidyverse,",
        "+ ",
        "  glue,",
        "+ ",
        "  here,",
        "+ ",
        "  purrr,",
        "+ ",
        "  estimatr,",
        "+ ",
        "  effectsize,",
        "+ ",
        "  patchwork,",
        "+ ",
        "  tidycensus",
        "+ ",
        ")",
        "> ",
        "",
        "> ",
        "options(es.use_symbols = TRUE) # get nice symbols",
        "> ",
        "",
        "> ",
        "source(here(\"functions\", \"utils.r\"))",
        "Error in source(here(\"functions\", \"utils.r\")) : \n  /home/jae/map_civic_opportunity/functions/utils.r:1:1: unexpected input\n1: \u001B\n    ^\n",
        "> ",
        "fips <- read_csv(here(\"raw_data\", \"fips_with_population.csv\"), col_types = (ZCTA <- \"c\"))",
        "> ",
        "",
        "> ",
        "zcta <- read_csv(here(\"raw_data\", \"zcta_cnts.csv\"), col_types = (ZCTA <- \"c\")) ",
        "> ",
        "",
        "> ",
        "census_county <- read_csv(here(\"raw_data\", \"census_fips_aggregate.csv\"))",
        "> ",
        "",
        "> ",
        "census_detail <- read_csv(here(\"raw_data\", \"census_zcta_detail_data.csv\"), col_types = (GEOID <- \"c\"))",
        "> ",
        "",
        "> ",
        "census_subject <- read_csv(here(\"raw_data\", \"census_zcta_subject_data.csv\"), col_types = (GEOID <- \"c\"))",
        "> ",
        "",
        "> ",
        "county_class <- read_csv(here(\"raw_data\", \"County_Classifications.csv\"))",
        "> ",
        "",
        "> ",
        "county_mutual <- read_csv(here(\"raw_data\", \"reproduction_data_mutual_aid_hubs_county.csv\"))",
        "> ",
        "",
        "> ",
        "names(county_class)[1] <- \"FIPS\"",
        "> ",
        "# census meta data",
        "> ",
        "census_zcta <- census_detail %>%",
        "+ ",
        "  inner_join(census_subject) %>%",
        "+ ",
        "  rename(ZCTA = GEOID) %>%",
        "+ ",
        "  mutate(race_per_white_nonhispanic = race_white_nonhispanic / population_total) %>%",
        "+ ",
        "  mutate(college_educ = (education_attainment_some_col + education_attainment_bs + education_attainment_grad) / education_attainment_total) %>%",
        "+ ",
        "  mutate(per_poverty = 1 - poverty_gt_150 / poverty_total) %>%",
        "+ ",
        "  dplyr::select(ZCTA, population_total, race_per_white_nonhispanic, per_poverty, college_educ)",
        "> ",
        "# county classification",
        "> ",
        "county_class <- county_class %>%",
        "+ ",
        "  mutate(urban_suburban_rural = case_when(",
        "+ ",
        "    RuralUrbanContinuumCode2013 %in% c(1, 2, 3) ~ \"Urban\",",
        "+ ",
        "    RuralUrbanContinuumCode2013 %in% c(4, 5, 6) ~ \"Suburban\",",
        "+ ",
        "    RuralUrbanContinuumCode2013 %in% c(7, 8, 9) ~ \"Rural\",",
        "+ ",
        "    is.na(RuralUrbanContinuumCode2013) ~ NA",
        "+ ",
        "  )) %>%",
        "+ ",
        "  mutate(urban_suburban_rural = factor(urban_suburban_rural, levels = c(\"Urban\", \"Suburban\", \"Rural\", NA)))",
        "> ",
        "# census_api_key(key = \"69df6af664132347b84276a365ce76d4c16cf336\")",
        "> ",
        "",
        "> ",
        "# var20 <- load_variables(2020, \"acs5\", cache = TRUE)",
        "> ",
        "",
        "> ",
        "# get_acs_zcta <- function(zcta_vec) {",
        "> ",
        "#   census_api_data <- get_acs(",
        "> ",
        "#     geography = \"zcta\",",
        "> ",
        "#     variables = c(",
        "> ",
        "#       \"B05002_001\", # total #",
        "> ",
        "#       \"B05002_013\"",
        "> ",
        "#     ), # foreign born #",
        "> ",
        "#     geometry = FALSE,",
        "> ",
        "#     output = \"wide\",",
        "> ",
        "#     zcta = zcta_vec,",
        "> ",
        "#     year = 2020",
        "> ",
        "#   )",
        "> ",
        "# }",
        "> ",
        "",
        "> ",
        "# census_api_data <- map_dfr(census$ZCTA, get_acs_zcta)",
        "> ",
        "",
        "> ",
        "# write_csv(census_api_data, here(\"raw_data\", \"census_api_data.csv\"))",
        "> ",
        "",
        "> ",
        "# census_api_data <- read_csv(here(\"raw_data\", \"census_api_data.csv\"))",
        "> ",
        "",
        "> ",
        "# census_foreign <- census_api_data %>%",
        "> ",
        "# mutate(foreign_born_pct = B05002_013E / B05002_001E) %>%",
        "> ",
        "#  select(GEOID, foreign_born_pct) %>%",
        "> ",
        "#  rename(ZCTA = GEOID)",
        "> ",
        "",
        "> ",
        "# mean(is.na(census_foreign$foreign_born_pct))",
        "> ",
        "dd <- fips %>%",
        "+ ",
        "  left_join(zcta) %>%",
        "+ ",
        "  left_join(census_zcta) %>%",
        "+ ",
        "  left_join(county_class)",
        "> ",
        "",
        "> ",
        "county_orgs <- zcta %>%",
        "+ ",
        "  group_by(FIPS) %>%",
        "+ ",
        "  summarize(all.orgs = sum(all.orgs),",
        "+ ",
        "            eng = sum(eng))",
        "> ",
        "",
        "> ",
        "dd <- dd %>%",
        "+ ",
        "  mutate(opc = 1000 * eng / population_total) %>%",
        "+ ",
        "  mutate(opc_tier = ntile(opc, 5)) %>%",
        "+ ",
        "  mutate(all_org = 1000 * all.orgs / population_total) %>%",
        "+ ",
        "  mutate(org_tier = ntile(all_org, 5))",
        "> ",
        "",
        "> ",
        "county_cov <- census_county %>%",
        "+ ",
        "  left_join(county_orgs) %>%",
        "+ ",
        "  left_join(county_class) %>%",
        "+ ",
        "  mutate(opc = 1000 * eng / population_total) %>%",
        "+ ",
        "  mutate(opc_tier = ntile(opc, 5)) %>%",
        "+ ",
        "  mutate(all_org = 1000 * all.orgs / population_total) %>%",
        "+ ",
        "  mutate(org_tier = ntile(all_org, 5))",
        "> ",
        "county_n <- length(unique(dd$FIPS))",
        "> ",
        "",
        "> ",
        "sum_county_zip <- dd %>%",
        "+ ",
        "  group_by(FIPS, urban_suburban_rural) %>%",
        "+ ",
        "  summarize(n = n()) %>%",
        "+ ",
        "  mutate(freq = n / county_n)",
        "> ",
        "",
        "> ",
        "sum_county_zip %>%",
        "+ ",
        "  ggplot(aes(x = n, fill = urban_suburban_rural)) +",
        "+ ",
        "  geom_density(alpha = 0.3) +",
        "+ ",
        "  labs(",
        "+ ",
        "    y = \"Count\",",
        "+ ",
        "    x = \"The # of zip codes in a county\",",
        "+ ",
        "    fill = \"Census urban-rural classification\"",
        "+ ",
        "  )",
        "> ",
        "",
        "> ",
        "ggsave(here(\"outputs\", \"zip_county_n.png\"))",
        "> ",
        "",
        "> ",
        "max(sum_county_zip$n) # 360 zip codes in a county (LA county)",
        "[1] 360\n",
        "> ",
        "",
        "> ",
        "min(sum_county_zip$n) # 1 zip code in a county",
        "[1] 1\n",
        "> ",
        "county_cov %>%",
        "+ ",
        "  filter(!is.na(opc_tier)) %>%",
        "+ ",
        "  group_by(opc_tier, urban_suburban_rural) %>%",
        "+ ",
        "  summarize(",
        "+ ",
        "    white = mean(race_per_white_nonhispanic, na.rm = T),",
        "+ ",
        "    poverty = mean(per_poverty, na.rm = T),",
        "+ ",
        "    educ = mean(college_educ, na.rm = T)",
        "+ ",
        "  )",
        "> ",
        "library(MASS)",
        "> ",
        "",
        "> ",
        "lm_btw_cty_all_org <- county_cov %>%",
        "+ ",
        "  group_by(urban_suburban_rural) %>%",
        "+ ",
        "  do(tidy(standardize(lm_robust(formula = all_org ~ race_per_white_nonhispanic + per_poverty + college_educ, data = .))))",
        "> ",
        "",
        "> ",
        "lm_btw_cty_civc_index <- county_cov %>%",
        "+ ",
        "  group_by(urban_suburban_rural) %>%",
        "+ ",
        "  do(tidy(standardize(lm_robust(formula = opc_tier ~ race_per_white_nonhispanic + per_poverty + college_educ, data = .))))",
        "> ",
        "",
        "> ",
        "btw_mod_bind <- bind_rows(",
        "+ ",
        "  mutate(lm_btw_cty_civc_index, DV = \"Civic opportunity index\"),",
        "+ ",
        "  mutate(lm_btw_cty_all_org, DV = \"Organizational density index\")",
        "+ ",
        ")",
        "> ",
        "between_counties_plot <- btw_mod_bind %>%",
        "+ ",
        "  mutate(term = recode(term,",
        "+ ",
        "    \"white\" = \"Non-hispanic white\",",
        "+ ",
        "    \"poverty\" = \"Federal poverty level\",",
        "+ ",
        "    \"educ\" = \"College educated\"",
        "+ ",
        "  )) %>%",
        "+ ",
        "  filter(!str_detect(term, \"(Intercept)\")) %>%",
        "+ ",
        "  ggplot(aes(x = urban_suburban_rural)) +",
        "+ ",
        "  geom_col(aes(y = estimate, fill = DV), position = \"dodge\", alpha = 0.8) +",
        "+ ",
        "  geom_errorbar(aes(ymax = conf.high, ymin = conf.low, fill = DV), position = \"dodge\") +",
        "+ ",
        "  geom_hline(yintercept = 0, linetype = \"dashed\", col = \"red\") +",
        "+ ",
        "  labs(",
        "+ ",
        "    x = \"\",",
        "+ ",
        "    y = \"Estimated coefficient\",",
        "+ ",
        "    title = \"Between counties\",",
        "+ ",
        "    fill = \"Type\"",
        "+ ",
        "  ) +",
        "+ ",
        "  scale_fill_viridis_d(option = \"rocket\", begin = 0.2, end = 0.8) +",
        "+ ",
        "  facet_wrap(~term, ncol = 2)",
        "> ",
        "",
        "> ",
        "between_counties_plot",
        "> ",
        "",
        "> ",
        "ggsave(here(\"outputs\", \"btw_counties.png\"), width = 8, height = 8)",
        "> ",
        "dd_opc <- dd %>%",
        "+ ",
        "  filter(!is.na(opc_tier)) %>%",
        "+ ",
        "  pivot_longer(",
        "+ ",
        "    cols = c(\"race_per_white_nonhispanic\", \"per_poverty\", \"college_educ\"),",
        "+ ",
        "    names_to = \"name\",",
        "+ ",
        "    values_to = \"value\"",
        "+ ",
        "  )",
        "> ",
        "",
        "> ",
        "dd_opc_sum <- dd_opc %>%",
        "+ ",
        "  group_by(urban_suburban_rural, opc_tier, name) %>%",
        "+ ",
        "  summarize(ggplot2::mean_cl_boot(value))",
        "> ",
        "",
        "> ",
        "region_plot <- dd_opc_sum %>%",
        "+ ",
        "  left_join(dd_opc) %>%",
        "+ ",
        "  ggplot(aes(x = opc_tier)) +",
        "+ ",
        "  geom_line(method = \"lm\", aes(y = y, fill = urban_suburban_rural)) +",
        "+ ",
        "  geom_ribbon(aes(ymax = ymax, ymin = ymin, fill = urban_suburban_rural)) +",
        "+ ",
        "  geom_jitter(aes(y = value, col = urban_suburban_rural), alpha = 0.01) +",
        "+ ",
        "  facet_wrap(~name) +",
        "+ ",
        "  labs(",
        "+ ",
        "    title = \"Pooled data\",",
        "+ ",
        "    y = \"Pct (%)\",",
        "+ ",
        "    x = \"Civic opportunity index\",",
        "+ ",
        "    fill = \"Census classification\",",
        "+ ",
        "    col = \"Census classification\"",
        "+ ",
        "  )",
        "> ",
        "dd <- dd %>%",
        "+ ",
        "  left_join(sum_county_zip %>%",
        "+ ",
        "    rename(zip_n = n) %>%",
        "+ ",
        "    dplyr::select(FIPS, zip_n))",
        "> ",
        "dd_lm <- dd %>%",
        "+ ",
        "  filter(urban_suburban_rural == \"Urban\") %>%",
        "+ ",
        "  slice_max(order_by = TotalPopEst2019, prop = 0.50) %>%",
        "+ ",
        "  group_by(FIPS) %>%",
        "+ ",
        "  do(tidy(standardize(lm_robust(formula = opc_tier ~ race_per_white_nonhispanic + per_poverty + college_educ, data = .))))",
        "\r|=============================================                                      | 54% ~2 s remaining     \r|==============================================                                     | 56% ~2 s remaining     \r|===============================================                                    | 58% ~2 s remaining     \r|=================================================                                  | 60% ~1 s remaining     \r|===================================================                                | 62% ~1 s remaining",
        "     \r|====================================================                               | 63% ~1 s remaining     \r|======================================================                             | 65% ~1 s remaining     \r|=======================================================                            | 67% ~1 s remaining     \r|========================================================                           | 68% ~1 s remaining     \r|=========================================================                          | 69% ~1 s remaining",
        "     \r|===========================================================                        | 71% ~1 s remaining     \r|============================================================                       | 73% ~1 s remaining     \r|=============================================================                      | 74% ~1 s remaining     \r|==============================================================                     | 76% ~1 s remaining     \r|===============================================================                    | 77% ~1 s remaining",
        "     \r|=================================================================                  | 78% ~1 s remaining     \r|==================================================================                 | 80% ~1 s remaining     \r|===================================================================                | 81% ~1 s remaining     \r|====================================================================               | 83% ~1 s remaining     \r|=====================================================================              | 84% ~1 s remaining",
        "     \r|======================================================================             | 85% ~1 s remaining     \r|========================================================================           | 87% ~0 s remaining     \r|=========================================================================          | 88% ~0 s remaining     \r|==========================================================================         | 90% ~0 s remaining     \r|===========================================================================        | 91% ~0 s remaining",
        "     \r|============================================================================       | 92% ~0 s remaining     \r|=============================================================================      | 94% ~0 s remaining     \r|===============================================================================    | 95% ~0 s remaining     \r|================================================================================   | 97% ~0 s remaining     \r|=================================================================================  | 98% ~0 s remaining",
        "     \r|================================================================================== |100% ~0 s remaining     ",
        "> ",
        "",
        "> ",
        "dd_lm_rc <- dd %>%",
        "+ ",
        "  filter(urban_suburban_rural == \"Urban\") %>%",
        "+ ",
        "  slice_max(order_by = TotalPopEst2019, prop = 0.50) %>%",
        "+ ",
        "  group_by(FIPS) %>%",
        "+ ",
        "  do(tidy(standardize(lm_robust(formula = all_org ~ race_per_white_nonhispanic + per_poverty + college_educ, data = .))))",
        "\r|=========================                                                          | 31% ~5 s remaining     \r|==========================                                                         | 32% ~4 s remaining     \r|============================                                                       | 34% ~4 s remaining     \r|=============================                                                      | 35% ~4 s remaining     \r|==============================                                                     | 37% ~4 s remaining",
        "     \r|================================                                                   | 39% ~4 s remaining     \r|=================================                                                  | 41% ~3 s remaining     \r|===================================                                                | 42% ~3 s remaining     \r|====================================                                               | 44% ~3 s remaining     \r|=====================================                                              | 46% ~3 s remaining",
        "     \r|=======================================                                            | 47% ~3 s remaining     \r|========================================                                           | 49% ~3 s remaining     \r|==========================================                                         | 51% ~3 s remaining     \r|===========================================                                        | 53% ~3 s remaining     \r|============================================                                       | 54% ~2 s remaining",
        "     \r|=============================================                                      | 55% ~2 s remaining     \r|===============================================                                    | 57% ~2 s remaining     \r|================================================                                   | 59% ~2 s remaining     \r|==================================================                                 | 61% ~2 s remaining     \r|===================================================                                | 62% ~2 s remaining",
        "     \r|====================================================                               | 64% ~2 s remaining     \r|======================================================                             | 65% ~2 s remaining     \r|======================================================                             | 66% ~2 s remaining     \r|========================================================                           | 68% ~2 s remaining     \r|==========================================================                         | 70% ~2 s remaining",
        "     \r|===========================================================                        | 71% ~1 s remaining     \r|============================================================                       | 73% ~1 s remaining     \r|=============================================================                      | 75% ~1 s remaining     \r|===============================================================                    | 77% ~1 s remaining     \r|=================================================================                  | 78% ~1 s remaining",
        "     \r|==================================================================                 | 80% ~1 s remaining     \r|====================================================================               | 82% ~1 s remaining     \r|=====================================================================              | 84% ~1 s remaining     \r|======================================================================             | 85% ~1 s remaining     \r|========================================================================           | 87% ~1 s remaining",
        "     \r|=========================================================================          | 89% ~1 s remaining     \r|===========================================================================        | 91% ~0 s remaining     \r|============================================================================       | 92% ~0 s remaining     \r|==============================================================================     | 94% ~0 s remaining     \r|===============================================================================    | 96% ~0 s remaining",
        "     \r|=================================================================================  | 98% ~0 s remaining     \r|===================================================================================|100% ~0 s remaining     ",
        "> ",
        "",
        "> ",
        "dd_lm_mean <- dd_lm %>%",
        "+ ",
        "  ungroup() %>%",
        "+ ",
        "  group_by(term) %>%",
        "+ ",
        "  summarize(ggplot2::mean_cl_boot(estimate))",
        "> ",
        "",
        "> ",
        "dd_lm_rc <- dd %>%",
        "+ ",
        "  filter(urban_suburban_rural == \"Urban\") %>%",
        "+ ",
        "  slice_max(order_by = TotalPopEst2019, prop = 0.50) %>%",
        "+ ",
        "  group_by(FIPS) %>%",
        "+ ",
        "  do(tidy(standardize(lm_robust(formula = all_org ~ race_per_white_nonhispanic + per_poverty + college_educ, data = .))))",
        "\r|=================================================                                  | 60% ~1 s remaining     \r|==================================================                                 | 61% ~1 s remaining     \r|===================================================                                | 62% ~1 s remaining     \r|====================================================                               | 64% ~1 s remaining     \r|======================================================                             | 65% ~1 s remaining",
        "     \r|=======================================================                            | 67% ~1 s remaining     \r|=========================================================                          | 69% ~1 s remaining     \r|==========================================================                         | 71% ~1 s remaining     \r|============================================================                       | 73% ~1 s remaining     \r|=============================================================                      | 75% ~1 s remaining",
        "     \r|===============================================================                    | 77% ~1 s remaining     \r|================================================================                   | 78% ~1 s remaining     \r|==================================================================                 | 80% ~1 s remaining     \r|===================================================================                | 81% ~1 s remaining     \r|====================================================================               | 83% ~1 s remaining",
        "     \r|======================================================================             | 85% ~1 s remaining     \r|=======================================================================            | 86% ~0 s remaining     \r|=========================================================================          | 88% ~0 s remaining     \r|==========================================================================         | 90% ~0 s remaining     \r|===========================================================================        | 92% ~0 s remaining",
        "     \r|=============================================================================      | 93% ~0 s remaining     \r|===============================================================================    | 95% ~0 s remaining     \r|================================================================================   | 97% ~0 s remaining     \r|=================================================================================  | 99% ~0 s remaining     ",
        "> ",
        "",
        "> ",
        "dd_lm_rc_mean <- dd_lm_rc %>%",
        "+ ",
        "  ungroup() %>%",
        "+ ",
        "  group_by(term) %>%",
        "+ ",
        "  summarize(ggplot2::mean_cl_boot(estimate))",
        "> ",
        "dd_lm_bind <- bind_rows(",
        "+ ",
        "  mutate(dd_lm_mean, Type = \"Civic opportunity index\"),",
        "+ ",
        "  mutate(dd_lm_rc_mean, Type = \"Organizational density index\")",
        "+ ",
        "  )",
        "> ",
        "within_counties_plot <- dd_lm_bind %>%",
        "+ ",
        "  filter(!str_detect(term, \"(Intercept)\")) %>%",
        "+ ",
        "  mutate(term = recode(term,",
        "+ ",
        "    \"race_per_white_nonhispanic\" = \"Non-hispanic white\",",
        "+ ",
        "    \"per_poverty\" = \"Federal poverty level\",",
        "+ ",
        "    \"college_educ\" = \"College educated\"",
        "+ ",
        "  )) %>%",
        "+ ",
        "  mutate(term = str_wrap(term, width = 10)) %>%",
        "+ ",
        "  ggplot(aes(x = term)) +",
        "+ ",
        "  geom_col(aes(y = y, fill = Type), position = \"dodge\", alpha = 0.8) +",
        "+ ",
        "  geom_errorbar(aes(ymax = ymax, ymin = ymin, fill = Type), position = \"dodge\") +",
        "+ ",
        "#  geom_jitter(aes(y = estimate, col = Type), alpha = 0.2) +",
        "+ ",
        "  geom_hline(yintercept = 0, linetype = \"dashed\", col = \"red\") +",
        "+ ",
        "#  coord_flip() +",
        "+ ",
        "  labs(",
        "+ ",
        "    title = \"Within counties (urban areas)\",",
        "+ ",
        "    subtitle = glue(\"50% of top zip codes by \\n the estimated 2019 population from urban areas\"),",
        "+ ",
        "    x = \"\",",
        "+ ",
        "    y = \"Average estimated coefficient\"",
        "+ ",
        "  ) +",
        "+ ",
        "  scale_fill_viridis_d(option = \"rocket\", begin = 0.2, end = 0.8)",
        "> ",
        "",
        "> ",
        "within_counties_plot",
        "> ",
        "",
        "> ",
        "ggsave(here(\"outputs\", \"within_counties.png\"))",
        "> ",
        "#region_plot + within_counties_plot + plot_annotation(tag_level = \"A\")",
        "> ",
        "",
        "> ",
        "#ggsave(here(\"outputs\", \"county_desc.png\"), height = 8, width = 15)",
        "> ",
        "between_counties_plot + within_counties_plot + plot_annotation(tag_level = \"A\")",
        "> ",
        "",
        "> ",
        "ggsave(here(\"outputs\", \"county_desc_unit_diff.png\"), height = 8, width = 10)",
        "> ",
        "theme_set(custom_theme())",
        "\nRestarting R session...\n\n"
    ]
}